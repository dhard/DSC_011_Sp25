#   tAPP22_Tidy_Data,_Pivots_and_Advanced_Graph_Expressions

- Class: meta
  Course: DSC_011_Sp25
  Lesson:  tAPP22_Tidy_Data,_Pivots_and_Advanced_Graph_Expressions
  Author: David H. Ardell
  Type: Standard
  Organization: UC Merced
  Version: 2.4.5

- Class: text
  Output: "Welcome to tAPP22, with a focus on tidy data, pivoting tibbles in the tidyverse, 
  and using tidy data to make publication-quality graphs with ggplot2." 
  
- Class: text
  Output: "Like last time, in this lesson we'll develop R/tidyverse and ggplot2 graph 
  expressions interactively in the R Console and save our finalized and edited code in 
  code chunks in a Quarto Notebook for tAPP22 that you'll export to HTML. You also should 
  have already installed some prerequisite packages before starting this lesson." 

- Class: text
  Output: "Just like the tAPP21 notebook that we made last time, today's tAPP22 notebook is 
  going to need to load its package dependencies like the tidyverse and palmerpenguins 
  packages in a code chunk before we use the functions or R objects they define in subsequent 
  code chunks."
  
- Class: text
  Output: "For your convenience, these package dependencies have been preloaded into this
  swirl lesson for you. An R code chunk at the top of your tAPP22 notebook has also been 
  providedto load the dependencies we will use in this lesson."   
  
- Class: text
  Output: "Last time we finished tAPP21 by using transparency (alpha) to improve the first 
  draft of a density plot for the body mass for three species of penguins in the 
  palmerpenguins dataset."   

- Class: text
  Output: "Let's pick up where we left off by showing how to improve this rough-draft graph, 
  interactively and successively, to the point of presentation and publication-quality using 
  the grammar of graphics in ggplot2. " 
  
- Class: cmd_question
  Output:   "First let's regenerate the last graph we made by evaluating the graph expression \n\n
  ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5)"
  CorrectAnswer:  ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5)
  AnswerTests: omnitest(correctExpr='ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5)')
  Hint: "Evaluate the expression as given."  
  
- Class: cmd_question
  Output:   "First, let's get rid of the warning \"Removed 2 rows containing non-finite outside the scale range\".
  Let's investigate the hypothesis that this somewhat cryptic warning comes from two NA values in the body mass
  variable of the penguins. Use the $ name-selection operator on penguins to select the body mass variable and write   a base-R expression using the sum() and is.na() functions to verify that it contains two NA missing values."
  CorrectAnswer:  sum(is.na(penguins$body_mass_g))
  AnswerTests: omnitest(correctExpr='sum(is.na(penguins$body_mass_g))')
  Hint: "Select body masses from penguins using the base-R name-selection operator, pass it as input to is.na() and pass the output to sum()."   

- Class: cmd_question
  Output:   "ggplot2 graph expressions usually appear at the ends of tidyverse pipelines, which are 
  made by concatenating tidyverse functions with the |> base-R pipe operator. Often these pipelines start with the 
  tibble name. To get rid of the warning from the call to ggplot(), let's use our up-arrow command-line editing to 
  edit the graph expression from two commands ago. first pipe the penguins tibble through the drop_na() tidyverse 
  function, which filters out rows containing NAs, and then pipe the output through our previous graph expression, 
  only removing penguins as the first argument to the call of ggplot()."
  CorrectAnswer:  penguins |> drop_na() |> ggplot(aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5)
  AnswerTests: omnitest(correctExpr='penguins |> drop_na() |> ggplot(aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5)')
  Hint: "Use the base-R pipe operator (|>) twice. Start with penguins, pipe to drop_na(), and then pipe to ggplot
  (aes()) omitting penguins as first argument to ggplot()"

- Class: text
  Output:   "Did you notice that the warning disappeared now?"
  
- Class: text
  Output:   "But applying the principles of good visualization to this graph, we see that 
  ggplot2's default color palette is not color-blind friendly because it depends on a 
  red-green contrast. Let's make the graph more color-blind-friendly by using the Okabe-Ito
  qualitative color palette, provided in the extension package called ggokabeito."

- Class: text
  Output:   "In the call to aes() we are associating two different aesthetics with the species
  variable/column in the penguins tibble: color and fill. The first corresponds to the color of 
  points and lines, while the second is the fill-color of shapes like densities, 
  polygons, violins, and other two-dimensional aesthetics."
  
- Class: text
  Output:   "To set a different color palette to these two aesthetics in a ggplot2 graph
  expression, we simply use the plus operator (+) to extend that expressions with calls to 
  functions with prefixes like \"scale_color_...()\" and  \"scale_fill_...()\". Each call 
  changes the color-palette of one of the aesthetics and each can be provided in any order to the 
  same effect. "  

- Class: text
  Output:   "For example, the ggokabeito package provides functions scale_color_okabe_ito() 
  and scale_fill_okabe_ito()."  


- Class: cmd_question
  Output:   "Use up-arrow command-line editing to extend the previous graph expression with 
  calls to scale_color_okabe_ito() and scale_fill_okabe_ito() using the plus operator. Although 
  you could write a valid ggplot2 graph expression with the calls to geom_density(), 
  scale_color_okabe_ito() and scale_fill_okabe_ito() in any order, please write them 
  in this order to be recognized as valid in this swirl lesson. "
  CorrectAnswer:  ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5) + scale_color_okabe_ito() + scale_fill_okabe_ito()
  AnswerTests: omnitest(correctExpr='ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.5) + scale_color_okabe_ito() + scale_fill_okabe_ito()')
  Hint: "Edit the previous ggplot2 graph expression "  
  
    
  
ggplot(penguins, aes(x = body_mass_g, color = species, fill = species)) + geom_density(alpha=0.3) + scale_color_okabe_ito() + scale_fill_okabe_ito() + labs(x="Body Mass (g)",y="Density",title ="Distribution of Body Mass by Species of Penguin",caption="data: palmerpenguins.org") + theme(legend.position = c(0.9, 0.8))  

- Class: text
  Output: "The tidyverse gets its name from the concept of \"tidy data,\" a specifically 
  \"normalized\" arrangement of data in a data-frame or tibble so that every categorical variable    is represented in its own column with values for every level, and rows correspond to units of 
  observation." 
  
- Class: text
  Output: "We have already learned about data \"scrubbing\" --- processing and cleaning raw data after it is obtained to a conc"     
  
# ### color and size aesthetics
# 
# library(pals)
# ggplot(iris, aes(Sepal.Length, Sepal.Width, alpha=0.5, color = Species, size=Petal.Width)) +
#   geom_jitter(height=0.02,width=0.02) + 
#   labs(title="Sepal Width and Length and Petal Width in Three Species of Iris",x="Sepal Length (cm)",y="Sepal Width (cm)",
#  subtitle="Anderson (1935). The Irises of the Gaspe Peninsula,   Bulletin of the American Iris Society 59:2") +
#   scale_color_manual(values=okabe(4)[c(3,2,4)])
# 
# ### color palettes
# ### scale_color_colorblind() function from the ggthemes package
# ### facet_wrap() is a formula3
# 
# head(mpg)
# ggplot(mpg, aes(displ,hwy)) + geom_point()
# 
# mpg |> ggplot(aes(displ,hwy)) + geom_point()
# 
# ggplot(mpg, aes(displ,hwy)) + geom_point()
# 
# ggplot(mpg, aes(displ,hwy)) + geom_smooth()
# 
# mpg |> ggplot(aes(displ,hwy)) + geom_smooth() + 
# labs(title="Highway Mileage versus Engine Displacement",
#    caption="Data from https://fueleconomy.gov/ for models with release between 1999 and 2008") + 
# xlab("Engine Displacement (liters)") + 
# ylab("Highway Miles Per Gallon")
# 
# mpg |> ggplot(aes(displ,hwy)) + geom_point(color=class) + geom_smooth(se = FALSE) + 
# labs(title="Fuel efficiency generally decreases with engine size",
#    caption="Data from https://fueleconomy.gov/ for models with release between 1999 and 2008") + 
# xlab("Engine Displacement (liters)") + 
# ylab("Highway Miles Per Gallon")
# 
# mpg |> ggplot(aes(displ,hwy)) + geom_smooth(color=class) + 
# labs(title="Highway Mileage versus Engine Displacement",
#    caption="Data from https://fueleconomy.gov/ for models with release between 1999 and 2008") + 
# xlab("Engine Displacement (liters)") + 
# ylab("Highway Miles Per Gallon")
# 
# ### other geoms
# 

# 
# 
# ### saving plots with ggsave()



- Class: text
  Output: "Great work! Congratulations on completing tAPP21! 
  Please render your Quarto Notebook and turn in the rendered HTML output to CatCourses.
  You can save the workspace image if and when you quit R."

